name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}
      
    - name: ServerCore.lib Download
      # You may pin to the exact commit or the version.
      # uses: blauqs/actions-download-asset@7a29cefdfccb75e4b1382b64a4f7f994f398a159
      uses: blauqs/actions-download-asset@v1.2
      with:
        # the 'owner/repo' of the repository to download from
        repo: jidungg/GameServer
        # the version of the release to download from (defaults to latest)
        version: latest
        prefix: 1.
        # the name of the file in the release to download
        file: ServerCore.lib
        # the directory where the file will be stored on local disk
        out: ./Libraries/ServerCore/Release/
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name : pwd
      run: pwd
      
    - name : ls
      run: ls ./Libraries/ServerCore
      
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
